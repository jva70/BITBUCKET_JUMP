---
general:
  buildTool: "mta"
  # Tell Piper to read the overlay we create during runFirst
  pipelineConfigFile: "dynamicConfig.yml"

service:
  buildToolVersion: "MBTJ21N22"
  stages:
    Build:
      credentialVariables:
        # Map your Secret Text credential here
        - name: "BITBUCKET_TOKEN"
          credentialId: "bitbucket-token"
      runFirst:
        command: |
          set -e
          echo "== Bootstrap: start =="

          if [ -z "${BITBUCKET_TOKEN}" ]; then
            echo "ERROR: BITBUCKET_TOKEN is not set (map a Secret Text credential)."
            exit 1
          fi

          # Make git send Authorization: Bearer <token> to your Bitbucket host
          git config --global http.https://devstack.vwgroup.com/.extraheader "Authorization: Bearer ${BITBUCKET_TOKEN}"

          echo "[1/3] Cloning corporate repo into ./source ..."
          rm -rf source
          git clone https://devstack.vwgroup.com/bitbucket/scm/vwskdevops/ibantest.git source

          echo "[2/3] Writing pipeline overlay dynamicConfig.yml from Bitbucket repo ..."
          if [ -f source/.ci/params.yml ]; then
            cp source/.ci/params.yml dynamicConfig.yml
            echo "dynamicConfig.yml written from source/.ci/params.yml"
          elif [ -f source/.pipeline/config.yml ]; then
            cp source/.pipeline/config.yml dynamicConfig.yml
            echo "dynamicConfig.yml written from source/.pipeline/config.yml"
          else
            echo "ERROR: no pipeline config found in source/.ci/params.yml or source/.pipeline/config.yml"
            exit 1
          fi

          echo "[3/3] Syncing Bitbucket sources into workspace root so build steps see mta.yaml ..."
          shopt -s dotglob || true
          cp -a source/* ./

          # Keep a copy for later stages; SAP CI/CD will unstash this back
          mkdir -p cloudcitransfer
          cp -a source/. cloudcitransfer/.

          echo "== Bootstrap: done =="

stages:
  Build:
    mavenExecuteStaticCodeChecks: false
    npmExecuteLint: false
  Acceptance:
    cloudFoundryDeploy: false
    npmExecuteEndToEndTests: false
  Malware Scan:
    malwareExecuteScan: false
  Release:
    tmsExport: false
    tmsUpload: false
    cloudFoundryDeploy: false
  Additional Unit Tests:
    npmExecuteScripts: false
  Compliance:
    sonarExecuteScan: false

steps:
  artifactPrepareVersion:
    versioningType: "cloud_noTag"
  mtaBuild:
    source: "cloudcitransfer"